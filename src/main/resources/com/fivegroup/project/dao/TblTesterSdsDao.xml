<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fivegroup.project.dao.TblTesterSdsDao">
    <sql id="likeTester">
        <where>
            <if test="tblTestResultVo.name!=null and tblTestResultVo.name!=''">
                and `name` like '%' #{tblTestResultVo.name} '%'
            </if>
            <if test="tblTestResultVo.testPlanId!=null and tblTestResultVo.testPlanId!=''">
                and test_plan_id= #{tblTestResultVo.testPlanId}
            </if>
        </where>
    </sql>
    <delete id="deleteTblTestResulSds">
        delete
        from w_gl.tbl_tester_sds
        where id in
        <foreach collection="ids" item="ids" open="(" separator="," close=")">
            #{ids}
        </foreach>

    </delete>
    <select id="getTbTestResultSdsCount" resultType="java.lang.Integer">
        select  count(*)
        from (
        (
        select `aaa`.`tester_id` AS `tester_id`,
        sum(((
        (`aaa`.`Forward_countA` + (`aaa`.`Forward_countB` * 2))
        + (`aaa`.`Forward_countC` * 3)) + (`aaa`.`Forward_countD` * 4)
        )) AS `forward`,
        sum(((
        ((`aaa`.`inversion_countA` * 4) + (`aaa`.`inversion_countB` * 3))
        + (`aaa`.`inversion_countC` * 2)) + `aaa`.`inversion_countD`
        )) AS `inversion`
        from (select `temp_count`.`tester_id` AS `tester_id`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'A'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countA`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'B'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countB`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'C'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countC`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'D'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countD`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'A'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countA`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'B'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countB`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'C'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countC`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'D'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countD`
        from (select `sds`.`type` AS `type`,
        `ansds`.`tester_id` AS `tester_id`,
        `ansds`.`answer` AS `answer`,
        count(`ansds`.`id`) AS `result_count`
        from (`tbl_test_result_sds` `ansds` left join `tbl_question_sds` `sds`
        on ((`ansds`.`question_id` = `sds`.`id`)))
        group by `sds`.`type`, `ansds`.`tester_id`, `ansds`.`answer`) `temp_count`
        group by `temp_count`.`tester_id`) `aaa`
        group by `aaa`.`tester_id`) `xxx` left join `tbl_tester_sds` `usertest`
        on ((`xxx`.`tester_id` = `usertest`.`id`)))
        <where>
            <if test="tblTestResultVo.name!=null and tblTestResultVo.name!=''">
                and `usertest`.`name` like '%' #{tblTestResultVo.name} '%'
            </if>
            <if test="tblTestResultVo.testPlanId!=null and tblTestResultVo.testPlanId!=''">
                and  `usertest`.`test_plan_id` = #{tblTestResultVo.testPlanId}
            </if>
        </where>
    </select>
    <select id="getTbTestResultSdsPageAll" resultType="com.fivegroup.project.entity.vo.TblTestResultVo">
        select `usertest`.`id` AS `id`,
        `usertest`.`name` AS `name`,
        `usertest`.`phone` AS `phone`,
        `usertest`.`create_time` AS `createTime`,
        `xxx`.`forward` AS `forward`,
        `xxx`.`inversion` AS `inversion`,
        `usertest`.`test_plan_id` AS `testPlanId`
        from (
            (
            select `aaa`.`tester_id` AS `tester_id`,
        sum(((
        (`aaa`.`Forward_countA` + (`aaa`.`Forward_countB` * 2))
        + (`aaa`.`Forward_countC` * 3)) + (`aaa`.`Forward_countD` * 4)
        )) AS `forward`,
        sum(((
        ((`aaa`.`inversion_countA` * 4) + (`aaa`.`inversion_countB` * 3))
        + (`aaa`.`inversion_countC` * 2)) + `aaa`.`inversion_countD`
        )) AS `inversion`
        from (select `temp_count`.`tester_id` AS `tester_id`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'A'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countA`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'B'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countB`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'C'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countC`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'D'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countD`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'A'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countA`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'B'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countB`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'C'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countC`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'D'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countD`
        from (select `sds`.`type` AS `type`,
        `ansds`.`tester_id` AS `tester_id`,
        `ansds`.`answer` AS `answer`,
        count(`ansds`.`id`) AS `result_count`
        from (`tbl_test_result_sds` `ansds` left join `tbl_question_sds` `sds`
        on ((`ansds`.`question_id` = `sds`.`id`)))
        group by `sds`.`type`, `ansds`.`tester_id`, `ansds`.`answer`) `temp_count`
        group by `temp_count`.`tester_id`) `aaa`
        group by `aaa`.`tester_id`) `xxx` left join `tbl_tester_sds` `usertest`
        on ((`xxx`.`tester_id` = `usertest`.`id`)))
        <where>
            <if test="tblTestResultVo.name!=null and tblTestResultVo.name!=''">
                and `usertest`.`name` like '%' #{tblTestResultVo.name} '%'
            </if>
            <if test="tblTestResultVo.testPlanId!=null and tblTestResultVo.testPlanId!=''">
                and  `usertest`.`test_plan_id` = #{tblTestResultVo.testPlanId}
            </if>
        </where>
        limit #{page} ,#{limit}
        ;
    </select>
    <select id="getTblTestCount" resultType="java.lang.Integer">
        select count(*)
        from w_gl.tbl_tester_sds;
    </select>
    <select id="getTbTestStatistics" resultType="com.fivegroup.project.entity.vo.StatisticsVo">
        select sum((s.forward + s.inversion) &lt; 50)                                     as normal,
        sum(50 &lt;= (s.forward + s.inversion) &amp;&amp; (s.forward + s.inversion) &lt;= 60) as slight,
        sum(60 &lt; (s.forward + s.inversion) &amp;&amp; (s.forward + s.inversion) &lt;= 70)  as moderate,
        sum((s.forward + s.inversion) > 70)                                     as severe,
        forward,
        inversion
        from (
        (select `aaa`.`tester_id` AS `tester_id`,
        sum(((
        (`aaa`.`Forward_countA` + (`aaa`.`Forward_countB` * 2))
        + (`aaa`.`Forward_countC` * 3)) + (`aaa`.`Forward_countD` * 4)
        ))            AS `forward`,
        sum(((
        ((`aaa`.`inversion_countA` * 4) + (`aaa`.`inversion_countB` * 3))
        + (`aaa`.`inversion_countC` * 2)) + `aaa`.`inversion_countD`
        ))            AS `inversion`
        from (select `temp_count`.`tester_id`                                       AS `tester_id`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'A'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countA`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'B'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countB`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'C'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countC`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '1') and (`temp_count`.`answer` = 'D'))
        then `temp_count`.`result_count` end)), 0) AS `Forward_countD`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'A'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countA`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'B'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countB`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'C'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countC`,
        ifnull(sum((case
        when ((`temp_count`.`type` = '2') and (`temp_count`.`answer` = 'D'))
        then `temp_count`.`result_count` end)), 0) AS `inversion_countD`
        from (select `sds`.`type`        AS `type`,
        `ansds`.`tester_id` AS `tester_id`,
        `ansds`.`answer`    AS `answer`,
        count(`ansds`.`id`) AS `result_count`
        from (`tbl_test_result_sds` `ansds` left join `tbl_question_sds` `sds`
        on ((`ansds`.`question_id` = `sds`.`id`)))
        group by `sds`.`type`, `ansds`.`tester_id`, `ansds`.`answer`) `temp_count`
        group by `temp_count`.`tester_id`) `aaa`
        group by `aaa`.`tester_id`) `s` left join `tbl_tester_sds` `usertest`
        on ((`s`.`tester_id` = `usertest`.`id`)));
    </select>
</mapper>